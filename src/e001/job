#!/bin/bash
#SBATCH -p normal256
#SBATCH -n 32
#SBATCH -c 4
#SBATCH -N 1
#SBATCH -t 01:20:00
#SBATCH --job-name="w-e001-ar"
#SBATCH --mem=250000
#SBATCH --exclusiv
#SBATCH --export=NONE

# -N : nombre de noeuds
# -n : nombre TOTAL de taches MPI
# -c : nombre de threads (OMP)

# Start by cd to the TMPDIR because Slurm won't do it for you !!!!!!!
cd $TMPDIR

# change the output file name
mv ${SLURM_SUBMIT_DIR}/slurm-${SLURM_JOB_ID}.out ${SLURM_SUBMIT_DIR}/${SLURM_JOB_NAME}.o${SLURM_JOB_ID}
echo ${SLURM_JOB_ID} > IDe001
# ------------------------------------------------------------------------------------------------------------------------------------------------------
#                                                             ENVIRONMENT AND JOB SETTINGS
# ------------------------------------------------------------------------------------------------------------------------------------------------------

# Job management:
# ---------------
#JOB_INITDIR=$SLURM_CHECKPOINT_IMAGE_DIR
# Sorry, but JOB_NAME is lost with the mandatory --export=NONE
#export JOB_NAME=SDSCPL
#export JOB_ID=$SLURM_JOB_ID



#echo JOB_INITDIR=$JOB_INITDIR
#echo JOB_NAME=$JOB_NAME
#echo JOB_ID=$JOB_ID
export AUTO_PROFILE_HT="on"
# Number of nodes/mpi-tasks/omp-threads:
# -------------------------------------
# -------------------------------------
NNODES=$SLURM_JOB_NUM_NODES
# Number of MPI tasks per node:
MPITASKS_PER_NODE=$((SLURM_NTASKS/SLURM_JOB_NUM_NODES))
# Number of OPEN-MP threads per MPI task :
export OMP_NUM_THREADS=$((SLURM_CPUS_ON_NODE/MPITASKS_PER_NODE))
# Total number of MPI tasks:
MPI_TASKS=$SLURM_NTASKS
NPROC=$MPI_TASKS

echo NNODES=$NNODES
echo MPITASKS_PER_NODE=$MPITASKS_PER_NODE
echo MPI_TASKS=$MPI_TASKS
echo OMP_NUM_THREADS=$OMP_NUM_THREADS

# Specific environment variables :
# ------------------------------
set -x
export OMP_STACKSIZE=4G
export KMP_STACKSIZE=4G
export KMP_MONITOR_STACKSIZE=4G
set +x
ulimit -s unlimited

# Software default environment variables :
# --------------------------------------
set -x
export DR_HOOK=1
export DR_HOOK_IGNORE_SIGNALS=-1
export DR_HOOK_SILENT=1
export DR_HOOK_SHOW_PROCESS_OPTIONS=0
export MPL_MBX_SIZE=2048000000
export EC_PROFILE_HEAP=0
export EC_PROFILE_MEM=0
export EC_MPI_ATEXIT=0
export EC_MEMINFO=0
export OPENBLAS_NUM_THREADS=1
export MKL_CBWR="AUTO,STRICT"
export MKL_NUM_THREADS=1
export MKL_DEBUG_CPU_TYPE=5
export ECCODES_SAMPLES_PATH=/opt/softs/libraries/ICC_2018.5.274/eccodes-2.17.0/share/eccodes/ifs_samples/grib1
export ECCODES_DEFINITION_PATH=/opt/softs/libraries/ICC_2018.5.274/eccodes-2.17.0/share/eccodes/definitions
set +x

source $CONFIG_FILE
echo $CONFIG_FILE


rr=00
AA=`echo $DATE |cut -c1-4`
MM=`echo $DATE |cut -c5-6`
DD=`echo $DATE |cut -c7-8`


ln -sf  $TMPDIR  $current_dir/tmp_e001
# options d'optimisation a l'execution.
export ZOPT=""
date
CYCLE=43
NCONF=001
VERSION=meteo
CNMEXP='AL03'
NSTOP=h048
TSTEP=60.
ADVEC=sli
MODEL=aladin
DOM='ALGE01'
LMPOFF='FALSE'
LECHKEVO='FALSE'
pref='ALGE01'


# fichiers coupleurs
DIR_DATA=${HOME}/exp/V8.0

ln -s ${ecoclimap_dir}/ecoclimapI_covers_param.bin       ecoclimapI_covers_param.bin
ln -s ${ecoclimap_dir}/ecoclimapII_eu_covers_param.bin   ecoclimapII_eu_covers_param.bin
ln -s ${ecoclimap_dir}/ecoclimapII_af_covers_param.bin  ecoclimapII_af_covers_param.bin
sed "s/NBPROC/$NPROC/g" $namel_e001 > fort.4
cp $namel_e001_sfx    EXSEG1.nam
ln -sf $EXECUTABLE  MASTERODB 
cp   $const/*  .

for (( j=$start_ech; j<=$end_ech; j+=$step_ech ));
do
 ECHPL=$(printf "%03d" $j)
 set -x
  # fichiers coupleurs 
ln -sf $OUT_CPL/COUPLAGE_AROME_${AA}${MM}${DD}00_0${ECHPL}  ELSCF${CNMEXP}ALBC${ECHPL} 

done

cp ELSCF${CNMEXP}ALBC000 ICMSH${CNMEXP}INIT

ln -sf $OUT_CPL/INIT_SURF_${AA}${MM}${DD}00 ICMSH${CNMEXP}INIT.sfx

export CFPDOM=ALGE01

ln -sf $clim_pgd             Const.Clim.sfx 
ln -sf $clim_model_config    Const.Clim 
ln -sf $clim_bdap_config     const.clim.${CFPDOM}


#================ EXCECUTION ===================================


$execution_bin   -genv I_MPI_DEBUG=1000 ./MASTERODB    > lola 1>&2


#==============================================================

#      ***************
#      *  Listing    *
#      ***************
if [ -a NODE.001_01 ] ; then
  for file in NODE* ; do
    \cat $file
  done
fi

mkdir -p $OUT_ICMSH $OUT_FPOS

for (( j=$start_ech; j<=$end_ech; j+=$step_ech ));;
do
 i=$(printf "%02d" $j)
mv ICMSHAL03+00${i} $OUT_ICMSH
mv PFAL03ALGE01+00${i} $OUT_FPOS

done
